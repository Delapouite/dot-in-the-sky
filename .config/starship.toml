# https://starship.rs/config/

"$schema" = 'https://starship.rs/config-schema.json'

format = """
$time\
$username\
$hostname\
$kubernetes\
$directory\
$git_branch\
$git_commit\
$git_state\
${custom.git}\
$git_status\
$package\
$dotnet\
$golang\
$java\
$nodejs\
$python\
$ruby\
$rust\
$nix_shell\
$conda\
$memory_usage\
$aws\
$env_var\
${custom.docker}\
$azure\
$cmd_duration\

$line_break\

$jobs\
$battery\
${custom.ssh_keys}\
${custom.direnv_allowed}\
${custom.direnv_denied}\
${custom.envars}\
${custom.files_hidden}\
${custom.sudo}\
$shell\
$character\
$status\
"""

[time]
disabled = false
time_format = "%T"
format = "[$time]($style) "
style = ""

[shell]
disabled = true
# does not work yet, nushell keeps displaying the fish :(
fish_indicator = "🐟"
unknown_indicator = "mystery shell"

[directory]
disabled = false
truncation_length = 4
truncate_to_repo = false
repo_root_style = "bold"
style = "yellow"

[git_commit]
disabled = false
only_detached = false
tag_disabled = false
style = "purple"

[git_status]
disabled = false
conflicted = '=$count'
deleted = '✘$count'
modified = '!$count'
renamed = '»$count'
staged = '+$count'
untracked = '?$count'
style = "blue"

[package]
disabled = false
display_private = true

[battery]
disabled = true

[character]
disabled = false
error_symbol = "[✖](bold red)"

[status]
disabled = false
symbol = ""
format = '[$symbol$common_meaning$signal_name$maybe_int]($style) '
map_symbol = false
style = "bold red"

[azure]
disabled = true
format = "on [$symbol($subscription) ($username)]($style) "
symbol = "Azure ☁️ "
style = "cyan"

[env_var]
disabled = true

[env_var.AZURE_STORAGE_ACCOUNT]
default = 'unknown AZURE_STORAGE_ACCOUNT'
style = "cyan"

[custom.git]
disabled = false
description = "Author and date of last git commit"
command = "git log -1 --format='%cn - %cd' --date=relative"
when = "true"
format = "[$output]($style) "
style = "cyan"

[custom.docker]
disabled = false
description = "Docker symbol if the current directory has Dockerfile or docker-compose.yml files"
shell = ["bash", "--noprofile", "--norc"]
detect_files = ["Dockerfile", "docker-compose.yml", "docker-compose.yaml"]
when = "command -v docker &> /dev/null; exit (echo $?);"
format = "🐳 "

[custom.sudo]
disabled = false
description = "Valid sudo timestamp marker"
when = "sudo -vn &>/dev/null"
format = "[sudo]($style)"
style = "bold cyan"

[custom.ssh_keys]
disabled = false
description = "SSH key count"
command = "ssh-add -l | grep --invert-match 'no identities' | wc --lines"
when = "ssh-add -l | grep --invert-match --quiet 'no identities'"
shell = ["bash", "--noprofile", "--norc"]
format = "[$output]($style)🔑"
style = "bold green"

[custom.direnv_allowed]
disabled = false
description = "Direnv allowed"
when = "direnv status | grep --quiet 'Found RC allowed true'"
format = " [direnv]($style)🌕"
style = "bold green"

[custom.direnv_denied]
disabled = false
description = "Direnv denied"
when = "direnv status | grep --quiet 'Found RC allowed false'"
format = " [direnv]($style)🌑"
style = "bold red"

[custom.envars]
disabled = false
description = "Envars count"
command = "env | wc --lines"
when = "true"
format = " [$output]($style)🌱"
style = "normal"

[custom.files_hidden]
disabled = false
description = 'Number of hidden files'
command = "ll -d .* | wc --lines"
when = "ll -d .*"
format = " [$output]($style)🥷"
style = "normal"
