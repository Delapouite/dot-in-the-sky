{
  "editor.cursorStyle": "block",
  "editor.cursorSurroundingLines": 10,
  "editor.fontSize": 12,
  "editor.quickSuggestions": {
    "other": true,
    "comments": true,
    "strings": true
  },
  "editor.minimap.enabled": false,
  "editor.renderLineHighlight": "all",
  "editor.renderWhitespace": "all",
  "editor.scrollbar.verticalScrollbarSize": 32,
  "editor.stickyScroll.enabled": true,
  "editor.suggestSelection": "first",
  "editor.tabSize": 2,
  "editor.wordBasedSuggestions": true,
  "editor.wordBasedSuggestionsMode": "allDocuments",
  "editor.bracketPairColorization.enabled": true,
  "editor.guides.bracketPairs": "active",
  "explorer.confirmDragAndDrop": false,
  "explorer.confirmDelete": false,
  "explorer.fileNesting.enabled": true,
  "explorer.fileNesting.patterns": {
    ".env": ".envrc,.env.example,.env.template",
    ".eslintrc.json": ".eslintcache",
    ".prettierrc": ".prettierignore,.editorconfig",
    "jest.config.js": "jest.*.js,jest.*.ts",
    "package.json": "package-lock.json,yarn.lock,pnpm-lock.yaml,.yarnrc.yml",
    "tsconfig.json": "tsconfig.*.json",
    "tsconfig.base.json": "tsconfig.*.json",
    "GemFile": "Gemfile.lock",
    "*.ts": "${capture}.js,${capture}.spec.ts"
  },
  "problems.showCurrentInStatus": true,
  "references.preferredLocation": "view",
  "files.exclude": {
    "**/.classpath": true,
    "**/.project": true,
    "**/.settings": true,
    "**/.factorypath": true
  },
  "search.exclude": {
    ".yarn": true,
    "yarn.lock": true
  },
  "search.mode": "reuseEditor",
  "terminal.integrated.fontFamily": "iosevka term",
  "terminal.integrated.fontSize": 13,
  "terminal.integrated.scrollback": 10000,
  "terminal.integrated.smoothScrolling": true,
  "update.mode": "none",
  "window.menuBarVisibility": "toggle",
  "workbench.colorTheme": "Dracula",
  "workbench.colorCustomizations": {
    "tab.activeBorderTop": "#50fa7b",
    "tab.activeBackground": "#444754"
  },
  "workbench.editor.highlightModifiedTabs": true,
  "workbench.startupEditor": "newUntitledFile",
  "workbench.statusBar.visible": true,
  "workbench.experimental.sidePanel.enabled": true,
  // languages
  "debug.javascript.autoAttachFilter": "disabled",
  /// js
  "javascript.referencesCodeLens.enabled": true,
  "javascript.referencesCodeLens.showOnAllFunctions": true,
  "javascript.updateImportsOnFileMove.enabled": "always",
  /// ts
  "typescript.implementationsCodeLens.enabled": true,
  "typescript.referencesCodeLens.enabled": true,
  "typescript.referencesCodeLens.showOnAllFunctions": true,
  "typescript.updateImportsOnFileMove.enabled": "always",
  /// py
  "python.analysis.typeCheckingMode": "strict",
  // extensions
  "atlascode.bitbucket.enabled": true,
  "atlascode.bitbucket.explorer.relatedJiraIssues.enabled": true,
  "atlascode.bitbucket.pipelines.explorerEnabled": true,
  "atlascode.jira.enabled": true,
  "azureFunctions.showProjectWarning": false,
  "azureResourceGroups.groupBy": "resourceType",
  "azurite.location": ".azurite",
  "cosmosDB.showSavePrompt": false,
  "docker.containers.groupBy": "State",
  "docker.containers.description": ["ContainerName", "State", "Status"],
  "eslint.alwaysShowStatus": true,
  "eslint.debug": true,
  "stylelint.validate": ["css", "scss"],
  "gitlens.blame.ignoreWhitespace": true,
  "gitlens.codeLens.enabled": false,
  "gitlens.sortBranchesBy": "date:desc",
  "gitlens.views.remotes.branches.layout": "list",
  /*
  "jest.autoRun": {
    "watch": false,
    "onSave": "test-src-file"
  },
  */
  "terraform.codelens.referenceCount": true,
  // format
  "prettier.semi": false,
  "prettier.trailingComma": "all",
  "[css][html][javascript][json][jsonc][scss][typescript][typescriptreact][yaml]": {
    "editor.defaultFormatter": "esbenp.prettier-vscode"
  },
  "[terraform][terraform-vars]": {
    "editor.defaultFormatter": "hashicorp.terraform"
  },
  "ini.format.enable": false,
  // schemas
  "json.schemas": [
    {
      "fileMatch": ["nest-cli.json"],
      "url": "https://json.schemastore.org/nest-cli"
    },
    {
      "fileMatch": ["angular.json"],
      "url": "https://raw.githubusercontent.com/angular/angular-cli/master/packages/angular/cli/lib/config/workspace-schema.json"
    },
    {
      "fileMatch": ["cypress.json", "cypress-config-dev.json"],
      "url": "https://raw.githubusercontent.com/cypress-io/cypress/v9.5.3/cli/schema/cypress.schema.json"
    },
    {
      "fileMatch": ["manifest.json"],
      "url": "https://json.schemastore.org/webextension.json"
    }
  ],
  "xml.server.preferBinary": true,
  // point to this specific version fixing the "condition" keys
  "yaml.schemas": {
    "https://bitbucket.org/atlassianlabs/atlascode/raw/f61ec5b742d3df75932b3c65d78e3c7e1cb67854/resources/schemas/pipelines-schema.json": "bitbucket-pipelines.yml"
  },
  // telemetry
  "telemetry.telemetryLevel": "off",
  "nxConsole.enableTelemetry": false,
  "partialDiff.enableTelemetry": false,
  "redhat.telemetry.enabled": false,
  "dance.modes": {
    "normal": {
      "cursorStyle": "block",
      "selectionBehavior": "character",
      "decorations": {
        "applyTo": "main",
        "backgroundColor": "$editor.hoverHighlightBackground",
        "isWholeLine": false
      },
      "onEnterMode": [
        [
          ".selections.restore",
          {
            "register": " ^",
            "try": true
          }
        ]
      ],
      "onLeaveMode": [
        [
          ".selections.save",
          {
            "register": " ^",
            "style": {
              "borderColor": "$editor.selectionBackground",
              "borderStyle": "solid",
              "borderWidth": "2px",
              "borderRadius": "1px"
            },
            "until": [
              [
                "mode-did-change",
                {
                  "include": "normal"
                }
              ],
              ["selections-did-change"]
            ]
          }
        ]
      ]
    }
  },
  "dance.menus": {
    "buffer": {
      "items": {
        "bf": {
          "text": "find",
          "command": "workbench.action.quickOpen"
        },
        "j": {
          "text": "next",
          "command": "workbench.action.nextEditorInGroup"
        },
        "k": {
          "text": "previous",
          "command": "workbench.action.previousEditorInGroup"
        },
        "d": {
          "text": "delete",
          "command": "workbench.action.closeActiveEditor"
        },
        "o": {
          "text": "delete others",
          "command": "workbench.action.closeOtherEditors"
        },
        "c": {
          "text": "config",
          "command": "workbench.action.openSettingsJson"
        }
      }
    }
  ],
}
